
from kivy.app import App
from kivy.uix.button import Button
from kivy.uix.boxlayout import BoxLayout


# Метод build возвращает только один виджет. Для того, чтобы вывести несколько виджетов,
# необходимо размещать их на lyaout'ах.
# Всего в kivy 8 lyaout'ов с различным свойствами.

# ---| 1. Box Layout |---
# Данный layout имеет два состояния:
# 1. Горизонтально ориентированный. Все виджеты автоматически располагаеются в строку. По дефолту.
# 2. Вертикально ориентированный. Все виджеты автоматически располагаеются один под другим.

# ---| 2. Grid Layout |---
# Располагает виджеты по сетке.

# ---| 3. Stack Layout |---
# Располагает все свои дочерние элементы в строках или столбцах в таком количестве, сколько их влезет.
# Можем указывать направление, в котором идет заполнение строчек или колонок.

# ---| 4. Anchor Layout |---
# Предназначен для решения задачи фиксации элементов управления в конктретных областях.

# ---| 5. Page Layout |---
# Предназначен для расположения множества элементов управления на нескольких страницах.

# ---| 6. Float Layout |---
# Абсолютное позиционирование элементов за счет указания абсолютных координат.

# ---| 7. Relative Layout |---
# Родственник Float Layout, реализует относительное позиционирование элементов. Относительно размеров layout'a.

# ---| 8. Scatter Layout |---
# Реализует мультитач.


class MyApp(App):
    def build(self):
        bl = BoxLayout()
        # Создание кнопок
        button1 = Button(text='Hello')
        button2 = Button(text='World')
        # Размещение кнопок на layout'е
        bl.add_widget(button1)
        bl.add_widget(button2)
        return bl

    # BoxLayout распределяет пространство между детьми поровну.


if __name__ == '__main__':
    MyApp().run()
